{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(docker:*)",
      "Bash(powershell:*)",
      "Bash(scoop:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(supabase:*)",
      "Bash(unzip:*)",
      "Bash(node:*)",
      "Bash(dir test-function.ts)",
      "Bash(npm run build:*)",
      "Bash(cp:*)",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-edge-functions.html\")",
      "Bash(explorer test-edge-functions.html)",
      "Bash(npx supabase login:*)",
      "Bash(npx supabase functions deploy:*)",
      "Bash(copy deployquery-analyzer.ts supabasefunctionsquery-analyzerindex.ts)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npx supabase:*)",
      "Bash(copy supabasefunctionsqa-validatorindex_optimized.ts supabasefunctionsqa-validatorindex.ts)",
      "Bash(npm run type-check:*)",
      "Bash(taskkill:*)",
      "Bash(rm:*)",
      "Bash(copy:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(npm ls:*)",
      "Bash(psql:*)",
      "Bash(dir:*)",
      "Bash(find:*)",
      "Bash(diff:*)",
      "Bash(npx:*)",
      "Bash(cat:*)",
      "Bash(npm run validate-keys:*)",
      "Bash(grep:*)",
      "Bash(explorer test-add-case-browser.html:*)",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-add-case-browser.html\")",
      "Bash(start chrome \"file:///C:/Users/User/Documents/GitHub/chat-pd-poa-06/test-add-case-browser-v2.html\")",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:*)",
      "Bash(gh issue view:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(timeout:*)",
      "Bash(echo \"Iniciando teste completo dos 121 casos...\" node scripts/test-qa-simple.mjs)",
      "Bash(start chrome \"file:///%CD%/test-chat-browser.html\")",
      "Bash(npm run deploy-functions:*)",
      "Bash(bash scripts/deploy-single-function.sh:*)",
      "Bash(start chrome \"file:///C:/Users/Aurora/OneDrive - PUCRS - BR/Documentos/GitHub/chat-pd-poa-07/test-chat-browser-v2.html\")",
      "Bash(set SUPABASE_ACCESS_TOKEN=sbp_b64d8863b5c2a1ec88484e5f210f8cd654c8dcb3)",
      "Bash(del:*)",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node test-agentic-rag-v3.mjs)",
      "Bash(start chrome \"http://localhost:5173/chat\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function searchPDUS() {\n  // Buscar por ''artigo 1'' no PDUS\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''*'')\n    .or(''content.ilike.%artigo 1%,title.ilike.%artigo 1%'')\n    .ilike(''source'', ''%PDUS%'')\n    .limit(5);\n  \n  console.log(''PDUS Articles found:'', data?.length || 0);\n  if (data && data.length > 0) {\n    data.forEach(d => {\n      console.log(''- Article:'', d.article_number, ''Source:'', d.source);\n      console.log(''  Title:'', d.title);\n      console.log(''  Content preview:'', d.content?.substring(0, 100));\n    });\n  } else {\n    console.log(''No PDUS articles found'');\n  }\n}\n\nsearchPDUS();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkSources() {\n  // Ver quais sources temos\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''source'')\n    .limit(100);\n  \n  const sources = [...new Set(data?.map(d => d.source) || [])];\n  console.log(''Available sources:'', sources);\n  \n  // Contar por source\n  for (const source of sources) {\n    const { count } = await supabase\n      .from(''legal_articles'')\n      .select(''*'', { count: ''exact'', head: true })\n      .eq(''source'', source);\n    console.log(''- '' + source + '':'', count, ''articles'');\n  }\n}\n\ncheckSources();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkTables() {\n  // Verificar legal_articles\n  const { count: legalCount } = await supabase\n    .from(''legal_articles'')\n    .select(''*'', { count: ''exact'', head: true });\n  console.log(''legal_articles count:'', legalCount);\n\n  // Verificar document_sections  \n  const { count: sectionsCount } = await supabase\n    .from(''document_sections'')\n    .select(''*'', { count: ''exact'', head: true });\n  console.log(''document_sections count:'', sectionsCount);\n\n  // Buscar PDUS em document_sections\n  const { data: pdusData } = await supabase\n    .from(''document_sections'')\n    .select(''title, content'')\n    .or(''title.ilike.%PDUS%,content.ilike.%PDUS%'')\n    .limit(3);\n  \n  console.log(''\\nPDUS in document_sections:'', pdusData?.length || 0);\n  pdusData?.forEach(d => {\n    console.log(''- Title:'', d.title);\n    console.log(''  Preview:'', d.content?.substring(0, 100));\n  });\n}\n\ncheckTables();\n\")",
      "Bash(NEXT_PUBLIC_SUPABASE_URL=https://ngrqwmvuhvjkeohesbxs.supabase.co NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg node -e \"\nconst { createClient } = require(''@supabase/supabase-js'');\nconst supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);\n\nasync function checkColumns() {\n  const { data, error } = await supabase\n    .from(''legal_articles'')\n    .select(''*'')\n    .limit(1);\n  \n  if (error) {\n    console.log(''Error:'', error.message);\n  } else if (data && data.length > 0) {\n    console.log(''Columns in legal_articles:'');\n    Object.keys(data[0]).forEach(col => console.log(''  -'', col));\n  }\n}\n\ncheckColumns();\n\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}