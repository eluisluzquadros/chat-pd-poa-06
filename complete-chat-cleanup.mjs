import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://ngrqwmvuhvjkeohesbxs.supabase.co";
const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ncnF3bXZ1aHZqa2VvaGVzYnhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2MDkwMTcsImV4cCI6MjA2OTE4NTAxN30.K3uyyzjyAQ17ohQGCUFx_RiMufblLyQzvxEZHakqKrg";

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

async function completeCleanup() {
  console.log('üßπ === LIMPEZA COMPLETA DAS TABELAS DE CHAT ===\n');
  
  try {
    // 1. Verificar estado atual
    console.log('1. üìä Verificando estado atual...');
    
    const { data: sessions, error: sessionsError } = await supabase
      .from('chat_sessions')
      .select('id, title, user_id');
    
    const { data: messages, error: messagesError } = await supabase
      .from('chat_history')
      .select('id, session_id, user_id');
    
    if (sessionsError || messagesError) {
      console.log('‚ùå Erro ao verificar estado:', { sessionsError, messagesError });
      return;
    }
    
    console.log(`   ‚Ä¢ Sess√µes: ${sessions?.length || 0}`);
    console.log(`   ‚Ä¢ Mensagens: ${messages?.length || 0}`);
    
    // 2. Limpar todas as mensagens primeiro (devido a foreign keys)
    console.log('\n2. üóëÔ∏è Removendo todas as mensagens...');
    
    const { error: deleteMessagesError } = await supabase
      .from('chat_history')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Remove tudo
    
    if (deleteMessagesError) {
      console.log('‚ùå Erro ao remover mensagens:', deleteMessagesError);
    } else {
      console.log('‚úÖ Todas as mensagens removidas');
    }
    
    // 3. Limpar todas as sess√µes
    console.log('\n3. üóëÔ∏è Removendo todas as sess√µes...');
    
    const { error: deleteSessionsError } = await supabase
      .from('chat_sessions')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Remove tudo
    
    if (deleteSessionsError) {
      console.log('‚ùå Erro ao remover sess√µes:', deleteSessionsError);
    } else {
      console.log('‚úÖ Todas as sess√µes removidas');
    }
    
    // 4. Verificar se h√° outros dados relacionados que podem ter o UUID corrompido
    console.log('\n4. üîç Verificando outras tabelas que podem ter refer√™ncias...');
    
    // Tentar encontrar tabelas que possam ter refer√™ncia ao UUID corrompido
    const tables = ['chat_rating', 'user_feedback', 'audit_log'];
    
    for (const table of tables) {
      try {
        const { data, error } = await supabase
          .from(table)
          .select('*')
          .limit(1);
        
        if (!error) {
          console.log(`   ‚úÖ Tabela ${table} verificada`);
          
          // Se a tabela tem coluna session_id, limpar tamb√©m
          const { error: cleanError } = await supabase
            .from(table)
            .delete()
            .eq('session_id', 'test-V3-1755613978934');
            
          if (!cleanError) {
            console.log(`   üßπ Limpeza preventiva em ${table} realizada`);
          }
        }
      } catch (e) {
        // Tabela n√£o existe, tudo bem
        console.log(`   ‚ö†Ô∏è Tabela ${table} n√£o existe`);
      }
    }
    
    // 5. Verifica√ß√£o final
    console.log('\n5. ‚úÖ Verifica√ß√£o final...');
    
    const { data: finalSessions } = await supabase
      .from('chat_sessions')
      .select('id');
    
    const { data: finalMessages } = await supabase
      .from('chat_history')
      .select('id');
    
    console.log(`   ‚Ä¢ Sess√µes restantes: ${finalSessions?.length || 0}`);
    console.log(`   ‚Ä¢ Mensagens restantes: ${finalMessages?.length || 0}`);
    
    console.log('\nüéâ === LIMPEZA COMPLETA CONCLU√çDA ===');
    console.log('‚úÖ Todas as tabelas de chat foram limpa');
    console.log('‚úÖ Dados corruptos completamente removidos');
    console.log('‚úÖ Sistema pronto para criar novas conversas');
    console.log('\nüìã PR√ìXIMOS PASSOS:');
    console.log('1. Crie algumas conversas enviando mensagens');
    console.log('2. Teste a funcionalidade de deletar');
    console.log('3. Deve funcionar perfeitamente agora! üöÄ');
    
  } catch (error) {
    console.log('‚ùå Erro geral na limpeza:', error);
  }
}

completeCleanup();